plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'idea'
}

group = 'pl.edu.pw.mini.ingreedio'
version = 'v0.5'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.data:spring-data-commons:3.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation 'org.zalando:problem-spring-web-starter:0.29.1'

    implementation 'com.google.cloud.sql:postgres-socket-factory:1.18.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:mongodb'
    testImplementation 'org.testcontainers:postgresql'

    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

jar {
    enabled = false
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
