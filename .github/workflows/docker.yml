name: Build and Prepare Docker Image

on:
  push:
    branches:
      - 'develop' 
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_prepare:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      # Checkout your repository content into GitHub Actions runner

    # - name: Docker Compose
    #   run: docker compose build
    #   # Builds the Docker image

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Log in to the Container registry
      uses: docker/login-action@v3.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5.3.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    # - name: Save Docker image
    #   run: docker save ingreedio-api-app -o api-image.tar
    #   # Saves the Docker image as a tarball

    # - name: Upload Docker image as an artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: api-docker-image
    #     path: api-image.tar
    #     retention-days: 7
    # - uses: "marvinpinto/action-automatic-releases@latest"
    #   with:
    #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
    #     automatic_release_tag: "latest"
    #     prerelease: true
    #     title: "Automatic build"
    #     files: |
    #       api-image.tar
