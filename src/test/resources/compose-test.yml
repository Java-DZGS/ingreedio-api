version: '3.8'

services:
  postgres:
    image: 'postgres:13.1-alpine'
    ports:
      - '5431:5432'
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
      - POSTGRES_DB=ingreedio

  mongo1:
    image: 'mongo'
    command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - '30001:27017'
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:30001',priority:1},{_id:1,host:'host.docker.internal:30002',priority:0.5},{_id:2,host:'host.docker.internal:30003',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
#      start_interval: 1s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  mongo2:
    image: 'mongo'
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
    ports:
      - '30002:27018'
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"

  mongo3:
    image: 'mongo'
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    ports:
      - '30003:27019'
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config: